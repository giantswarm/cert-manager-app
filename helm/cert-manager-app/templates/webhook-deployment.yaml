{{- $proxy := deepCopy .Values.cluster.proxy |  mustMerge .Values.proxy -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "certManager.name.webhook" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: "webhook"
    giantswarm.io/monitoring_basic_sli: "true"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webhook.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: "webhook"
      {{- include "certManager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "webhook"
        {{- include "certManager.defaultLabels" . | nindent 8 }}
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - "{{ template "certManager.name" . }}"
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - "{{ template "certManager.name" . }}"
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: {{ template "certManager.name.webhook" . }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.userID }}
        runAsGroup: {{ .Values.global.securityContext.groupID }}
        runAsNonRoot: {{ .Values.global.securityContext.runAsNonRoot }}
      containers:
        - name: webhook
          image: "{{ .Values.global.image.registry }}/giantswarm/cert-manager-webhook:{{ .Values.global.image.version }}"
          imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
          args:
          - --v={{ .Values.webhook.logLevel | default 2 }}
          {{- if .Values.webhook.config }}
          - --config=/var/cert-manager/config/config.yaml
          {{- end }}
          {{- $config := default .Values.webhook.config "" }}
          {{ if not $config.securePort -}}
          - --secure-port={{ .Values.webhook.securePort }}
          {{- end }}
          {{- $tlsConfig := default $config.tlsConfig "" }}
          {{ if or (not $config.tlsConfig) (and (not $tlsConfig.dynamic) (not $tlsConfig.filesystem) ) -}}
          - --dynamic-serving-ca-secret-namespace={{ .Release.Namespace }}
          - --dynamic-serving-ca-secret-name={{ template "certManager.name.webhook" . }}-ca
          - --dynamic-serving-dns-names={{ template "certManager.name.webhook" . }},{{ template "certManager.name.webhook" . }}.{{ .Release.Namespace }},{{ template "certManager.name.webhook" . }}.{{ .Release.Namespace }}.svc{{ if .Values.webhook.url.host }},{{ .Values.webhook.url.host }}{{ end }}
          {{- end }}
          {{- with .Values.webhook.extraArgs }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          securityContext:
            readOnlyRootFilesystem: true
          ports:
          - name: https
            protocol: TCP
            {{- if $config.securePort }}
            containerPort: {{ $config.securePort }}
            {{- else if .Values.webhook.securePort }}
            containerPort: {{ .Values.webhook.securePort }}
            {{- else }}
            containerPort: 6443
            {{- end }}
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if and $proxy.noProxy $proxy.http $proxy.https }}
          - name: NO_PROXY
            value: {{ $proxy.noProxy }}
          - name: no_proxy
            value: {{ $proxy.noProxy }}
          - name: HTTP_PROXY
            value: {{ $proxy.http }}
          - name: http_proxy
            value: {{ $proxy.http }}
          - name: HTTPS_PROXY
            value: {{ $proxy.https }}
          - name: https_proxy
            value: {{ $proxy.https }}
          {{- end }}
          resources:
            {{- toYaml .Values.webhook.resources | nindent 12 }}
          {{- if .Values.webhook.config }}
          volumeMounts:
            - name: config
              mountPath: /var/cert-manager/config
          {{- end }}
      {{- if .Values.webhook.config }}
      volumes:
        - name: config
          configMap:
            name: {{ template "certManager.name.webhook" . }}
      {{- end }}
