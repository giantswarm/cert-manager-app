apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "certManager.name" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/component: "controller"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: "controller"
      {{- include "certManager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "controller"
        {{- include "certManager.defaultLabels" . | nindent 8 }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9402'
    spec:
      serviceAccountName: {{ template "certManager.name" . }}
      securityContext:
        runAsUser: {{ .Values.global.securityContext.userID }}
        runAsGroup: {{ .Values.global.securityContext.groupID }}
      containers:
        - name: {{ template "certManager.name" . }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.controller.image.name }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          args:
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --default-issuer-name=letsencrypt-giantswarm
          - --default-issuer-kind=ClusterIssuer
          ports:
          - containerPort: 9402
            protocol: TCP
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources: {{ toJson .Values.resources }}
