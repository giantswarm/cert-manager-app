global:
  podSecurityStandards:
    enforced: true

crds:
  enabled: true
  keep: true

image:
  registry: &registry gsoci.azurecr.io
  repository: giantswarm/cert-manager-controller

resources:
  requests:
    cpu: 50m
    memory: 100Mi
  limits:
    cpu: 500m
    memory: 1Gi

securityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  runAsUser: 1000
  runAsGroup: 1000

containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"

tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
  - key: node-role.kubernetes.io/control-plane
    effect: NoSchedule

livenessProbe:
  enabled: false
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 8

prometheus:
  enabled: true
  servicemonitor:
    enabled: true
    prometheusInstance: default
    targetPort: 9402
    path: /metrics
    interval: 60s
    scrapeTimeout: 30s
    labels: {}
    annotations: {}
    honorLabels: false
    endpointAdditionalProperties:
      relabelings:
        - action: replace
          regex: ;(.*)
          replacement: $1
          separator: ;
          sourceLabels:
            - namespace
            - __meta_kubernetes_namespace
          targetLabel: namespace
        - action: replace
          sourceLabels:
            - __meta_kubernetes_pod_label_app
          targetLabel: app
        - action: replace
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: node

webhook:
  replicaCount: 2
  timeoutSeconds: 30
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
    runAsUser: 1000
    runAsGroup: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  podDisruptionBudget:
    enabled: true
    minAvailable: "50%"
  resources:
    requests:
      cpu: 20m
      memory: 50Mi
    limits:
      cpu: 100m
      memory: 100Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: apps.giantswarm.io/affinity
                  operator: In
                  values:
                    - cert-manager-webhook
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - "webhook"
            topologyKey: kubernetes.io/hostname
          weight: 100
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
  podLabels:
    apps.giantswarm.io/affinity: cert-manager-webhook
  image:
    registry: *registry
    repository: giantswarm/cert-manager-webhook
    pullPolicy: IfNotPresent
  networkPolicy:
    enabled: true
    ingress:
    - from:
      - ipBlock:
          cidr: 0.0.0.0/0
    egress:
    - ports:
      - port: 80
        protocol: TCP
      - port: 443
        protocol: TCP
      - port: 53
        protocol: TCP
      - port: 53
        protocol: UDP
      - port: 6443
        protocol: TCP
      to:
      - ipBlock:
          cidr: 0.0.0.0/0

cainjector:
  enabled: true
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
    runAsUser: 1000
    runAsGroup: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  podAnnotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  verticalPodAutoscaler:
    enabled: true
    controlledValues: "RequestsAndLimits"
    mode: "Auto"
    updatePolicy:
      updateMode: "Auto"
    # minAllowed
    # If not set, it will default to the current resource requests
    # minAllowed:
    #   cpu: 50m
    #   memory: 64Mi
    # maxAllowed
    # If not set, it allows unlimited scaling
    # maxAllowed:
    #   cpu: 1
    #   memory: 1Gi
  resources:
    requests:
      cpu: 20m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 1Gi
  image:
    registry: *registry
    repository: giantswarm/cert-manager-cainjector
    pullPolicy: IfNotPresent

acmesolver:
  image:
    registry: *registry
    repository: giantswarm/cert-manager-acmesolver
    pullPolicy: IfNotPresent

startupapicheck:
  enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  resources:
    requests:
      cpu: 20m
      memory: 64Mi
  tolerations:
    - key: node-role.kubernetes.io/master
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
  image:
    registry: *registry
    repository: giantswarm/cert-manager-startupapicheck
    pullPolicy: IfNotPresent

giantswarmNetworkPolicy:
  enabled: true

ciliumNetworkPolicy:
  enabled: false

fullnameOverride: "cert-manager-app"
