apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}-script
data:
  update-ingress.sh: |

    # Parse ingressClassName from clusterissuer.yaml
    INGRESS_CLASS_NAME=$(grep 'ingressClassName:' /data/clusterissuer.yaml | awk '{print $2}')

    # Check if ingressClassName is set in clusterissuer.yaml
    if [[ -z "$INGRESS_CLASS_NAME" ]]; then
        # If not set, check for a default IngressClass in the cluster
        DEFAULT_INGRESS_CLASS=$(kubectl get ingressclass --all-namespaces -o jsonpath='{.items[?(@.metadata.annotations."ingressclass.kubernetes.io/is-default-class"=="true")].metadata.name}')
        
        # If no default IngressClass, set to the first available IngressClass
        if [[ -z "$DEFAULT_INGRESS_CLASS" ]]; then
            FIRST_AVAILABLE_INGRESS_CLASS=$(kubectl get ingressclass --all-namespaces -o jsonpath='{.items[0].metadata.name}')
            if [[ -n "$FIRST_AVAILABLE_INGRESS_CLASS" ]]; then
                sed -i 's/ingressClassName:.*/ingressClassName: "'"$FIRST_AVAILABLE_INGRESS_CLASS"'"/' /data/clusterissuer.yaml
            else
                echo "No available IngressClass found"
                exit 1
            fi
        fi
    fi
