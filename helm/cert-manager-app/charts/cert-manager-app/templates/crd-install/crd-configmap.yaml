{{/*
We have to create individual configmaps for each CRD - they exceed the total
allowed length for a configmap if they are combined.
*/}}
{{- if .Values.crds.install }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-certificaterequests
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  certificaterequests.yaml: |
{{ tpl ( .Files.Get "files/certificaterequests.yaml" ) . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-certificates
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  certificates.yaml: |
{{ tpl ( .Files.Get "files/certificates.yaml" ) . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-challenges
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  challenges.yaml: |
{{ tpl ( .Files.Get "files/challenges.yaml" ) . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-clusterissuers
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  clusterissuers.yaml: |
{{ tpl ( .Files.Get "files/clusterissuers.yaml" ) . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-issuers
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  issuers.yaml: |
{{ tpl ( .Files.Get "files/issuers.yaml" ) . | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "certManager.name.crdInstall" . }}-orders
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # create hook dependencies in the right order
    "helm.sh/hook-weight": "-5"
    {{- include "certManager.CRDInstallAnnotations" . | nindent 4 }}
  labels:
    app.kubernetes.io/component: "{{ template "certManager.name.crdInstall" . }}"
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    role: "{{ template "certManager.CRDInstallSelector" . }}"
data:
  orders.yaml: |
{{ tpl ( .Files.Get "files/orders.yaml" ) . | indent 4 }}
{{- end }}
