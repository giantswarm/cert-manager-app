apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "certManager.name.cainjector" . }}:leaderelection
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/component: cainjector
rules:
  # Used for leader election by the controller
  # cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
  #   see cmd/cainjector/start.go#L113
  # cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
  #   see cmd/cainjector/start.go#L137
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create"]
---
# grant cert-manager permission to manage the leaderelection configmap in the
# leader election namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "certManager.name.cainjector" . }}:leaderelection
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "certManager.defaultLabels" . | nindent 4 }}
    app.kubernetes.io/component: cainjector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "certManager.name.cainjector" . }}:leaderelection
subjects:
  - kind: ServiceAccount
    name: {{ template "certManager.name.cainjector" . }}
    namespace: {{ .Release.Namespace | quote }}
